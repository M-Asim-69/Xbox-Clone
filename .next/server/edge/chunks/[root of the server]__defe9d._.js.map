{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\n\nexport async function middleware(request) {\n  const token = request.cookies.get(\"access_token\")?.value;\n\n  // Define routes that require authentication\n  const protectedRoutes = [\"/Add\", \"/Todo\", \"/Update\"];\n\n  // Check if the current route is one of the protected routes\n  const isProtectedRoute = protectedRoutes.some((route) => \n    request.nextUrl.pathname.startsWith(route)\n  );\n\n  // Redirect to login if the route is protected and no token is present\n  if (isProtectedRoute && !token) {\n    return NextResponse.redirect(new URL(\"/Login\", request.url));\n  }\n\n  // Allow access to other routes without authentication\n  return NextResponse.next();\n}\n\nexport const config = {\n  // Match all routes to ensure middleware runs for every request\n  matcher: [\"/Add\",'/Todo','/Update'], \n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAEO,eAAe,WAAW,OAAO;IACtC,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,iBAAiB;IAEnD,4CAA4C;IAC5C,MAAM,kBAAkB;QAAC;QAAQ;QAAS;KAAU;IAEpD,4DAA4D;IAC5D,MAAM,mBAAmB,gBAAgB,IAAI,CAAC,CAAC,QAC7C,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAGtC,sEAAsE;IACtE,IAAI,oBAAoB,CAAC,OAAO;QAC9B,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,sDAAsD;IACtD,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,+DAA+D;IAC/D,SAAS;QAAC;QAAO;QAAQ;KAAU;AACrC"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}